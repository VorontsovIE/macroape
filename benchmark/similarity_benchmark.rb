require 'benchmark'

$:.unshift File.join(File.dirname(__FILE__),'../lib')
require_relative '../lib/macroape'

class TaskToBenchmark
  def setup
    @matrix_first = "KLF4_f2.xml
      0.30861857265872605 -2.254321000121579 0.13505703522674192 0.3285194224375633 
      -1.227018967707036 -4.814127713368663 1.3059890687390967 -4.908681463544344 
      -2.443469374521196 -4.648238485031404 1.3588686548279805 -4.441801801188402 
      -2.7177827948276123 -3.8073538975356565 1.356272809724262 -3.504104725510225 
      -0.5563232977367343 0.5340697765121405 -3.61417723090579 0.5270259776377405 
      -1.8687622060887386 -4.381483976582316 1.337932245336098 -3.815629658877517 
      -2.045671123823928 -2.384975142213679 0.7198551207724355 0.5449254135616948 
      -1.373157530374372 -3.0063112097748217 1.285188335493552 -2.5026044231773543 
      -2.1030513122772208 -1.8941348100402244 1.249265758393991 -1.4284210948906104 
      -1.3277128628152939 0.8982415633049462 -0.8080773665408135 -0.18161647647456935
      "

    @matrix_second = "> SP1_f1
    -0.24435707885585334  -0.6748234046937317  0.8657012535789861  -1.1060188862599292
    -1.0631255752097801  -2.1119259694238686  1.0960627561110399  -0.6138563775211981
    -0.387227623476054  -2.973985191321805  1.1807800242010371  -4.338927525031567
    -4.563896055436894  -2.916163300253228  1.3684371349982631  -5.077972423609655
    -2.2369752892820087  -3.719643631330185  1.3510439136452728  -4.8899306705082335
    -0.07473964149330914  0.9449196547620103  -2.624685764808605  -0.851098348782244
    -1.9643526491643326  -2.9784027708801153  1.3113096718240569  -2.3243342594990253
    -4.015548413965584  -3.138426807809667  1.338748858978805  -2.0846739035376483
    -0.4450938582835542  -2.2510053061629707  1.126543157436868  -1.7780413702431377
    -1.1896356092245055  -1.2251832285630033  1.163676006374752  -1.6080243648157357
    -0.5166047365590577  0.7641033353626651  -0.28626775700282125  -0.6825482097865606"
    
    @pvalue = 0.0005
    @discretization = 10
    @first_background, @second_background = [1,1,1,1], [1,1,1,1]
    
    @pwm_first = Bioinform::PWM.new(@matrix_first).background(@first_background).discrete(@discretization)
    @pwm_second = Bioinform::PWM.new(@matrix_second).background(@second_background).discrete(@discretization)
    @cmp = Macroape::PWMCompare.new(@pwm_first, @pwm_second)
    self
  end

  def run
    first_threshold = @pwm_first.threshold(@pvalue)
    second_threshold = @pwm_second.threshold(@pvalue)
    info = @cmp.jaccard(first_threshold, second_threshold)
  end
end

benchmark_result = 10.times.collect do
  task_to_benchmark = TaskToBenchmark.new.setup
  Benchmark.measure{  task_to_benchmark.run }
end.inject(&:+)

puts benchmark_result